openapi: 3.0.0
info:
  version: 1.0.0
  title: Customer Centre
servers:
  - url: http://screwfix.com/v1/
tags:
  - name: customer
    description: Customer related operation
  - name: customerOrder
    description: Operations related to order
  - name: organization
    description: Operations for organization management
  - name: product
    description: Operations for product data
  - name: other
    description: Other operations
paths:
  /customer:
    post:
      tags:
        - customer
      summary: Create customer
      operationId: createCustomer
      parameters: []
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/search:
    get:
      tags:
        - customer
      summary: Search for customers
      operationId: searchCustomers
      parameters: []
      responses:
        '200':
          description: An array of Customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}:
    get:
      tags:
        - customer
      summary: Get customer details
      operationId: customerById
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - customer
      summary: Update customer details
      operationId: updateCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/address:
    post:
      tags:
        - customer
      summary: Create address for user
      operationId: createCustomerAddress
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/address/{addressId}:
    get:
      tags:
        - customer
      summary: Get user address details
      operationId: getCustomerAddress
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer to retrieve
          schema:
            type: string
        - name: addressId
          in: path
          required: true
          description: The id of the address to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - customer
      summary: Update address for user
      operationId: updateCustomerAddress
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer to update
          schema:
            type: string
        - name: addressId
          in: path
          required: true
          description: The id of the address to update
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - customer
      summary: Delete address from user
      operationId: deleteCustomerAddress
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: addressId
          in: path
          required: true
          description: The id of the address to remove
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/card:
    post:
      tags:
        - customer
      summary: Create card for user
      operationId: createCustomerCard
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/card/{cardId}:
    get:
      tags:
        - customer
      summary: Get user card details
      operationId: getCustomerCard
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: cardId
          in: path
          required: true
          description: The id of the card
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - customer
      summary: Update card for user
      operationId: updateCustomerCard
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: cardId
          in: path
          required: true
          description: The id of the card
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - customer
      summary: Delete card from user
      operationId: deleteCustomerCard
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: cardId
          in: path
          required: true
          description: The id of the card
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/card/{cardId}/checkExpiration:
    get:
      tags:
        - customer
      summary: Get card expiration
      operationId: getCardExpiration
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: cardId
          in: path
          required: true
          description: The id of the card
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/note:
    get:
      tags:
        - customer
      summary: Get notes for user
      operationId: getCustomerNotes
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
      responses:
        '200':
          description: An array of notes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - customer
      summary: Create note for user
      operationId: createCustomerNote
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/note/{noteId}:
    put:
      tags:
        - customer
      summary: Update note for user
      operationId: updateCustomerNote
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: noteId
          in: path
          required: true
          description: The id of the note
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - customer
      summary: Delete note from user
      operationId: deleteCustomerNote
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: noteId
          in: path
          required: true
          description: The id of the note
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/credit:
    get:
      tags:
        - customer
      summary: Get credits for user
      operationId: getCustomerCredits
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
      responses:
        '200':
          description: An array of credits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credits'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - customer
      summary: Create credit for user
      operationId: createCustomerCredit
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credit'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/credit/{creditId}:
    put:
      tags:
        - customer
      summary: Update credit for user
      operationId: updateCustomerCredit
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: creditId
          in: path
          required: true
          description: The id of the credit
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credit'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - customer
      summary: Delete credit from user
      operationId: deleteCustomerCredit
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: creditId
          in: path
          required: true
          description: The id of the credit
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/organization:
    get:
      tags:
        - customer
      summary: Get organizations for user
      operationId: getCustomerOrganizations
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
      responses:
        '200':
          description: An array of organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizations'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/organization/{organizationId}:
    delete:
      tags:
        - customer
      summary: Delete organization from user
      operationId: deleteCustomerOrganization
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order:
    get:
      tags:
        - customerOrder
      summary: Get orders for user
      operationId: getCustomerOrders
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
      responses:
        '200':
          description: An array of orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - customerOrder
      summary: Create order for user
      operationId: createCustomerOrder
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}:
    get:
      tags:
        - customerOrder
      summary: Get order for user
      operationId: getCustomerOrder
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - customerOrder
      summary: Update order for user
      operationId: updateCustomerOrder
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/changeCustomer:
    put:
      tags:
        - customerOrder
      summary: Update customer for order
      operationId: changeCustomerForOrder
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/release:
    put:
      tags:
        - customerOrder
      summary: Release order
      operationId: releaseOrder
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/submit:
    put:
      tags:
        - customerOrder
      summary: Submit order
      operationId: submitOrder
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/releaseStock:
    put:
      tags:
        - customerOrder
      summary: Release stock for order order
      operationId: releaseOrderStock
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/reserveStock:
    put:
      tags:
        - customerOrder
      summary: Reserve order stock
      operationId: reserveOrderStock
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/address:
    post:
      tags:
        - customerOrder
      summary: Select address for order
      operationId: selectOrderAddress
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/card:
    post:
      tags:
        - customerOrder
      summary: Select card for order
      operationId: selectOrderCard
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/note:
    get:
      tags:
        - customerOrder
      summary: Get notes for order
      operationId: getOrderNotes
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: An array of notes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - customerOrder
      summary: Create note for order
      operationId: createOrderNote
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/note/{noteId}:
    put:
      tags:
        - customerOrder
      summary: Update note for order
      operationId: updateOrderNote
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
        - name: noteId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - customerOrder
      summary: Delete note from order
      operationId: deleteOrderNote
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
        - name: noteId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/promotion:
    get:
      tags:
        - customerOrder
      summary: Get promotions for order
      operationId: getOrderPromotions
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: An array of promotions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotions'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - customerOrder
      summary: Add promotion for order
      operationId: addOrderPromotion
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/promotion/{promotionId}:
    delete:
      tags:
        - customerOrder
      summary: Delete promotion from order
      operationId: deleteOrderPromotion
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
        - name: promotionId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/return:
    get:
      tags:
        - customerOrder
      summary: Get returns for order
      operationId: getOrderReturns
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: An array of returns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Returns'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - customerOrder
      summary: Add return to order
      operationId: addOrderReturn
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/return/{returnId}:
    get:
      tags:
        - customerOrder
      summary: Get return details
      operationId: getOrderReturn
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
        - name: returnId
          in: path
          required: true
          description: The id of the return
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - customerOrder
      summary: Update return
      operationId: updateOrderReturn
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
        - name: returnId
          in: path
          required: true
          description: The id of the return
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - customerOrder
      summary: Delete return from order
      operationId: deleteOrderReturn
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
        - name: returnId
          in: path
          required: true
          description: The id of the return
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/return/{returnId}/address:
    post:
      tags:
        - customerOrder
      summary: Select address for return
      operationId: selectReturnAddress
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
        - name: returnId
          in: path
          required: true
          description: The id of the return
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customerId}/order/{orderId}/return/{returnId}/complete:
    post:
      tags:
        - customerOrder
      summary: Complete return
      operationId: completeReturn
      parameters:
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
        - name: returnId
          in: path
          required: true
          description: The id of the return
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order/search:
    get:
      tags:
        - other
      summary: Search for orders
      operationId: searchOrders
      parameters: []
      responses:
        '200':
          description: An array of Orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /address/search:
    get:
      tags:
        - other
      summary: Search for addresses
      operationId: searchAddresses
      parameters: []
      responses:
        '200':
          description: An array of Addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organization:
    post:
      tags:
        - organization
      summary: Create organization
      operationId: createOrganization
      parameters: []
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organization/search:
    get:
      tags:
        - organization
      summary: Search for organizations
      operationId: searchOrganizations
      parameters: []
      responses:
        '200':
          description: An array of Organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizations'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organization/{organizationId}:
    get:
      tags:
        - organization
      summary: Get organization details
      operationId: organizationById
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - organization
      summary: Update organization details
      operationId: updateOrganization
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - organization
      summary: Remove organization
      operationId: removeOrganization
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organization/{organizationId}/address:
    post:
      tags:
        - organization
      summary: Create address for organization
      operationId: createOrganizationAddress
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organization/{organizationId}/address/{addressId}:
    get:
      tags:
        - organization
      summary: Get organization address details
      operationId: getOrganizationAddress
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
        - name: addressId
          in: path
          required: true
          description: The id of the address
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - organization
      summary: Update address for organization
      operationId: updateOrganizationAddress
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
        - name: addressId
          in: path
          required: true
          description: The id of the address
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organization/{organizationId}/note:
    get:
      tags:
        - organization
      summary: Get notes for organization
      operationId: getOrganizationNotes
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
      responses:
        '200':
          description: An array of notes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - organization
      summary: Create note for organization
      operationId: createOrganizationNote
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organization/{organizationId}/note/{noteId}:
    put:
      tags:
        - organization
      summary: Update note for organization
      operationId: updateOrganizationNote
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
        - name: noteId
          in: path
          required: true
          description: The id of the note
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - organization
      summary: Delete note from organization
      operationId: deleteOrganizationNote
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
        - name: noteId
          in: path
          required: true
          description: The id of the note
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organization/{organizationId}/customer:
    get:
      tags:
        - organization
      summary: Get customers for organization
      operationId: getOrganizationCustomers
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
      responses:
        '200':
          description: An array of organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organization/{organizationId}/customer/{customerId}:
    delete:
      tags:
        - organization
      summary: Delete customer from organization
      operationId: deleteOrganizationCustomer
      parameters:
        - name: organizationId
          in: path
          required: true
          description: The id of the organization
          schema:
            type: string
        - name: customerId
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/search:
    get:
      tags:
        - product
      summary: Search for products
      operationId: searchProducts
      parameters: []
      responses:
        '200':
          description: An array of Organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/{productId}:
    get:
      tags:
        - product
      summary: Get product details
      operationId: productById
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/{productId}/availability:
    get:
      tags:
        - product
      summary: Get product availability
      operationId: productAvailability
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/{productId}/recommendation:
    get:
      tags:
        - product
      summary: Get product recommendations
      operationId: productRecommendations
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /delivery:
    get:
      tags:
        - other
      summary: Get delivery options
      operationId: getDeliveryOptions
      parameters: []
      responses:
        '200':
          description: An array of DeliveryOptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryOptions'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /branch:
    get:
      tags:
        - other
      summary: Get branches
      operationId: getBranches
      parameters: []
      responses:
        '200':
          description: An array of Branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branches'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shipping:
    get:
      tags:
        - other
      summary: Get shipping methods
      operationId: getShippingMethods
      parameters: []
      responses:
        '200':
          description: An array of Shipping Methods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethods'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tcMessage:
    post:
      tags:
        - other
      summary: Create trade counter message
      operationId: createTcMessage
      parameters: []
      responses:
        '200':
          description: Message creation status
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Customer:
      type: object
      properties: {}
    Customers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    Address:
      type: object
      properties: {}
    Addresses:
      type: array
      items:
        $ref: '#/components/schemas/Address'
    Card:
      type: object
      properties: {}
    Note:
      type: object
      properties: {}
    Notes:
      type: array
      items:
        $ref: '#/components/schemas/Note'
    Organization:
      type: object
      properties: {}
    Organizations:
      type: array
      items:
        $ref: '#/components/schemas/Organization'
    Credit:
      type: object
      properties: {}
    Credits:
      type: array
      items:
        $ref: '#/components/schemas/Credit'
    Order:
      type: object
      properties: {}
    Orders:
      type: array
      items:
        $ref: '#/components/schemas/Order'
    Return:
      type: object
      properties: {}
    Returns:
      type: array
      items:
        $ref: '#/components/schemas/Return'
    Promotion:
      type: object
      properties: {}
    Promotions:
      type: array
      items:
        $ref: '#/components/schemas/Promotion'
    Product:
      type: object
      properties: {}
    Products:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    DeliveryOption:
      type: object
      properties: {}
    DeliveryOptions:
      type: array
      items:
        $ref: '#/components/schemas/DeliveryOption'
    Branch:
      type: object
      properties: {}
    Branches:
      type: array
      items:
        $ref: '#/components/schemas/Branch'
    ShippingMethod:
      type: object
      properties: {}
    ShippingMethods:
      type: array
      items:
        $ref: '#/components/schemas/ShippingMethod'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
